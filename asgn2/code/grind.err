==6393== Memcheck, a memory error detector
==6393== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6393== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==6393== Command: ./yshell
==6393== 
yshell: Bad: no such function
==6393== 
==6393== HEAP SUMMARY:
==6393==     in use at exit: 1,586 bytes in 35 blocks
==6393==   total heap usage: 327 allocs, 292 frees, 12,138 bytes allocated
==6393== 
==6393== 1,586 (96 direct, 1,490 indirect) bytes in 1 blocks are definitely lost in loss record 14 of 14
==6393==    at 0x4C2A483: operator new(unsigned long) (vg_replace_malloc.c:344)
==6393==    by 0x41A872: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==6393==    by 0x41A2F0: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==6393==    by 0x4199B5: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==6393==    by 0x41935E: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(inode*&, std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:675)
==6393==    by 0x418A27: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:1342)
==6393==    by 0x417F12: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr.h:359)
==6393==    by 0x4176B8: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:706)
==6393==    by 0x41707A: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:722)
==6393==    by 0x412D5D: inode_state::inode_state() (file_sys.cpp:45)
==6393==    by 0x41C39B: main (main.cpp:57)
==6393== 
==6393== LEAK SUMMARY:
==6393==    definitely lost: 96 bytes in 1 blocks
==6393==    indirectly lost: 1,490 bytes in 34 blocks
==6393==      possibly lost: 0 bytes in 0 blocks
==6393==    still reachable: 0 bytes in 0 blocks
==6393==         suppressed: 0 bytes in 0 blocks
==6393== 
==6393== For counts of detected and suppressed errors, rerun with: -v
==6393== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
